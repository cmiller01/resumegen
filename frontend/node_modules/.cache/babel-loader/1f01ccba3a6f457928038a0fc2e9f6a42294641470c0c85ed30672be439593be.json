{"ast":null,"code":"var _jsxFileName = \"/Users/vik/Dropbox (Personal)/Code/python/resumegen/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\n/* Material UI controls */\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\n/* import { styled } from '@mui/material/styles'; */\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport Chip from '@mui/material/Chip';\nimport Stack from '@mui/material/Stack';\nimport Grid from '@mui/material/Grid';\n/* Icons */\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\nimport ErrorIcon from '@mui/icons-material/Error';\nimport FileOpenIcon from '@mui/icons-material/FileOpen';\nimport SaveAsIcon from '@mui/icons-material/SaveAs';\nimport EditNoteIcon from '@mui/icons-material/EditNote';\nimport { ThemeOptions } from '@mui/material/styles';\n/* List */\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemText from '@mui/material/ListItemText';\n/* AppBar */\nimport AppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport IconButton from '@mui/material/IconButton';\nimport MenuIcon from '@mui/icons-material/Menu';\n\n/* Theme */\nexport const themeOptions = {\n  palette: {\n    mode: 'light',\n    primary: {\n      main: '#3f51b5'\n    },\n    secondary: {\n      main: '#f50057'\n    }\n  }\n};\nimport './App.css'; // Import the CSS file\n\n/* Constants */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst G_KEYBUTTON_TXT = \"Extract Keywords\";\nconst G_OPENRESUME_TXT = \"Open Resume\";\nconst G_GENERATERESUME_TXT = \"Generate Resume\";\nconst G_SAVEJOB_TXT = \"Save this Job\";\nconst G_JOBSHEADER_TXT = \"Jobs\";\nfunction App() {\n  _s();\n  /**\n   * Create state variables job_desc and keywords, which will be used to store and update the \n   * current text input value and the list of extracted keywords, respectively. \n   * The setText function is used to update the value of the text state variable.\n   * The setkeywords_tuple function is used to update the value of the keywords state variable.\n   */\n  const [job_desc, setJobDesc] = useState('');\n  const [found_keywords, setFoundKeywords] = useState([]);\n  const [missing_keywords_arr, setMissingKeywords] = useState([]);\n  const [resume_fname, setResumeFname] = useState('');\n  const [edited_txt, setEditedText] = useState('');\n  /* Database */\n  const [jobName, setJobName] = useState('');\n  const [jobList, setJobList] = useState([]);\n  useEffect(() => {\n    fetchJobs();\n  }, []);\n  const fetchJobs = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/get-jobs');\n      const data = response.data;\n      console.log(\"fetchJobs(): data.jobs:\", data);\n      setJobList(data);\n    } catch (error) {\n      console.log('Error in fetchJobs():', error);\n    }\n  };\n  const saveJob = async () => {\n    const ownerID = 1; // Hardcode owner ID\n    const orgID = 1000;\n    const jobData = {\n      title: jobName,\n      desc: job_desc,\n      owner_id: ownerID,\n      org_id: orgID\n    };\n    try {\n      const response = await axios.post('http://localhost:5000/save-job', jobData);\n      console.log(response.data.message);\n      fetchJobs();\n    } catch (error) {\n      console.log('Error:', error);\n    }\n  };\n\n  /**\n   * Handle click event on a job item in the list.\n   * Retrieve the job description from the SQLite table based on the job's ID.\n   * Set the job description as the value of the \"Job Description\" TextField.\n   *   job - The job object clicked in the list.\n   */\n  const handleJobClickinList = async job => {\n    try {\n      // Make a GET request to the Flask API endpoint to retrieve job description\n      const response = await axios.get(`http://localhost:5000/get-job/${job.id}`);\n      const data = response.data;\n      if (data.desc) {\n        // Set the job description in the state to update the \"Job Description\" TextField\n        setJobDesc(data.desc);\n      }\n    } catch (error) {\n      console.log('Error in handleJobClickinList():', error);\n    }\n  };\n\n  /**\n   * Handles the analyze button click event.\n   * Calls the OpenAI API with the provided 'job_desc' to extract keywords from the file 'resume_fname'\n   */\n  const handleAnalyze = () => {\n    axios.post('http://localhost:5000/analyze', {\n      job_desc,\n      resume_fname\n    }).then(response => {\n      setFoundKeywords(response.data.found_keywords_arr);\n      setMissingKeywords(response.data.missing_keywords_arr);\n    }).catch(error => {\n      console.log('Analyze this request error:', error);\n    });\n  };\n\n  /**\n   * Handles the Generate Resume button click event.\n   * Calls the OpenAI API with the provided text to add missing keywords\n   */\n  const handleGenerate = () => {\n    axios.post('http://localhost:5000/generate', {\n      resume_fname,\n      missing_keywords_arr\n    }).then(response => {\n      setEditedText(response.data.edited_txt);\n    }).catch(error => {\n      console.log('handleGenerate() error:', error);\n    });\n  };\n\n  // handleJobDescChange() \n  // Clear the keyword list whenever the input text changes\n  const handleJobDescChange = event => {\n    setJobDesc(event.target.value);\n    setEditedText('');\n    setFoundKeywords([]);\n    setMissingKeywords([]);\n  };\n\n  // handleFileSelect\n  const handleFileSelect = event => {\n    const file = event.target.files[0];\n    if (file) {\n      setResumeFname(file.name);\n    }\n  };\n\n  // handleFileOpen\n  const handleFileOpen = () => {\n    document.getElementById('file-input').click();\n  };\n\n  // This is the web application\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        flexGrow: 1\n      },\n      children: /*#__PURE__*/_jsxDEV(AppBar, {\n        position: \"static\",\n        children: /*#__PURE__*/_jsxDEV(Toolbar, {\n          variant: \"dense\",\n          children: [/*#__PURE__*/_jsxDEV(IconButton, {\n            edge: \"start\",\n            color: \"inherit\",\n            \"aria-label\": \"menu\",\n            sx: {\n              mr: 2\n            },\n            children: /*#__PURE__*/_jsxDEV(MenuIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            color: \"inherit\",\n            component: \"div\",\n            children: \"ResumeAI\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        flexGrow: 1\n      },\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 8,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            id: \"file-input\",\n            onChange: handleFileSelect,\n            style: {\n              display: 'none'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            size: \"large\",\n            sx: {\n              mb: 2,\n              mr: 2\n            },\n            onClick: handleFileOpen,\n            endIcon: /*#__PURE__*/_jsxDEV(FileOpenIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 24\n            }, this),\n            children: G_OPENRESUME_TXT\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Resume\",\n            className: \"resume-filename\",\n            variant: \"filled\",\n            size: \"small\",\n            sx: {\n              mb: 2\n            },\n            focused: true,\n            value: resume_fname,\n            InputProps: {\n              readOnly: true\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Job Description\",\n            className: \"input-pane\",\n            variant: \"filled\",\n            multiline: true,\n            rows: 20,\n            sx: {\n              mb: 1\n            },\n            defaultValue: job_desc,\n            onChange: handleJobDescChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Job Name\",\n            fullWidth: true,\n            sx: {\n              mb: 2\n            },\n            size: \"small\",\n            value: jobName,\n            onChange: e => setJobName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            endIcon: /*#__PURE__*/_jsxDEV(SaveAsIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 24\n            }, this),\n            onClick: saveJob,\n            children: G_SAVEJOB_TXT\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 4,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              justifyContent: 'center',\n              my: 4\n            },\n            children: /*#__PURE__*/_jsxDEV(Paper, {\n              sx: {\n                p: 2,\n                width: 600\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h8\",\n                component: \"h4\",\n                children: G_JOBSHEADER_TXT\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(List, {\n                sx: {\n                  maxHeight: 800,\n                  overflow: 'auto'\n                },\n                children: jobList.map(job => /*#__PURE__*/_jsxDEV(ListItem, {\n                  disablePadding: true,\n                  children: /*#__PURE__*/_jsxDEV(ListItemButton, {\n                    onClick: () => handleJobClickinList(job),\n                    children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                      primary: job.title\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 253,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 252,\n                    columnNumber: 23\n                  }, this)\n                }, job.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 251,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 8,\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            endIcon: /*#__PURE__*/_jsxDEV(EditNoteIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 24\n            }, this),\n            sx: {\n              mb: 5\n            },\n            onClick: handleAnalyze,\n            children: G_KEYBUTTON_TXT\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"keywords-pane\",\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                flexWrap: 'wrap',\n                width: 500,\n                height: 150\n              },\n              children: /*#__PURE__*/_jsxDEV(Stack, {\n                direction: \"row\",\n                flexWrap: \"wrap\",\n                spacing: 1,\n                children: [found_keywords.map((keyword, index) => /*#__PURE__*/_jsxDEV(Chip, {\n                  label: keyword,\n                  color: \"success\",\n                  size: \"small\",\n                  icon: /*#__PURE__*/_jsxDEV(CheckCircleIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 282,\n                    columnNumber: 78\n                  }, this),\n                  sx: {\n                    mb: 1,\n                    mr: 1,\n                    ml: 1\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 282,\n                  columnNumber: 21\n                }, this)), missing_keywords_arr.map((keyword, index) => /*#__PURE__*/_jsxDEV(Chip, {\n                  label: keyword,\n                  color: \"error\",\n                  size: \"small\",\n                  icon: /*#__PURE__*/_jsxDEV(ErrorIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 285,\n                    columnNumber: 76\n                  }, this),\n                  sx: {\n                    mb: 1,\n                    mr: 1,\n                    ml: 1\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 285,\n                  columnNumber: 21\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 8,\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            sx: {\n              mt: 5,\n              mb: 5\n            },\n            onClick: handleGenerate,\n            endIcon: /*#__PURE__*/_jsxDEV(EditNoteIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 95\n            }, this),\n            children: G_GENERATERESUME_TXT\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            className: \"output-pane\",\n            label: \"Edited\",\n            variant: \"filled\",\n            multiline: true,\n            rows: 20,\n            value: edited_txt\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 181,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"SyBC6n7241u7uG+TAReWhmT01CM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","Box","Paper","TextField","Button","Chip","Stack","Grid","CheckCircleIcon","ErrorIcon","FileOpenIcon","SaveAsIcon","EditNoteIcon","ThemeOptions","List","ListItem","ListItemButton","ListItemText","AppBar","Toolbar","Typography","IconButton","MenuIcon","themeOptions","palette","mode","primary","main","secondary","jsxDEV","_jsxDEV","G_KEYBUTTON_TXT","G_OPENRESUME_TXT","G_GENERATERESUME_TXT","G_SAVEJOB_TXT","G_JOBSHEADER_TXT","App","_s","job_desc","setJobDesc","found_keywords","setFoundKeywords","missing_keywords_arr","setMissingKeywords","resume_fname","setResumeFname","edited_txt","setEditedText","jobName","setJobName","jobList","setJobList","fetchJobs","response","get","data","console","log","error","saveJob","ownerID","orgID","jobData","title","desc","owner_id","org_id","post","message","handleJobClickinList","job","id","handleAnalyze","then","found_keywords_arr","catch","handleGenerate","handleJobDescChange","event","target","value","handleFileSelect","file","files","name","handleFileOpen","document","getElementById","click","children","sx","flexGrow","position","variant","edge","color","mr","fileName","_jsxFileName","lineNumber","columnNumber","component","container","spacing","item","xs","type","onChange","style","display","size","mb","onClick","endIcon","label","className","focused","InputProps","readOnly","multiline","rows","defaultValue","fullWidth","e","justifyContent","my","p","width","maxHeight","overflow","map","disablePadding","flexWrap","height","direction","keyword","index","icon","ml","mt","_c","$RefreshReg$"],"sources":["/Users/vik/Dropbox (Personal)/Code/python/resumegen/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\n/* Material UI controls */\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\n/* import { styled } from '@mui/material/styles'; */\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport Chip from '@mui/material/Chip';\nimport Stack from '@mui/material/Stack';\nimport Grid from '@mui/material/Grid';\n/* Icons */\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\nimport ErrorIcon from '@mui/icons-material/Error';\nimport FileOpenIcon from '@mui/icons-material/FileOpen';\nimport SaveAsIcon from '@mui/icons-material/SaveAs';\nimport EditNoteIcon from '@mui/icons-material/EditNote';\nimport { ThemeOptions } from '@mui/material/styles';\n/* List */\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemText from '@mui/material/ListItemText';\n/* AppBar */\nimport AppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport IconButton from '@mui/material/IconButton';\nimport MenuIcon from '@mui/icons-material/Menu';\n\n/* Theme */\nexport const themeOptions: ThemeOptions = {\n  palette: {\n    mode: 'light',\n    primary: {\n      main: '#3f51b5',\n    },\n    secondary: {\n      main: '#f50057',\n    },\n  },\n};\n\nimport './App.css'; // Import the CSS file\n\n/* Constants */\nconst G_KEYBUTTON_TXT = \"Extract Keywords\";\nconst G_OPENRESUME_TXT = \"Open Resume\";\nconst G_GENERATERESUME_TXT = \"Generate Resume\";\nconst G_SAVEJOB_TXT = \"Save this Job\";\nconst G_JOBSHEADER_TXT = \"Jobs\";\n\nfunction App() {\n  /**\n   * Create state variables job_desc and keywords, which will be used to store and update the \n   * current text input value and the list of extracted keywords, respectively. \n   * The setText function is used to update the value of the text state variable.\n   * The setkeywords_tuple function is used to update the value of the keywords state variable.\n   */\n  const [job_desc, setJobDesc] = useState('');\n  const [found_keywords, setFoundKeywords] = useState([]);\n  const [missing_keywords_arr, setMissingKeywords] = useState([]);\n  const [resume_fname, setResumeFname] = useState('');\n  const [edited_txt, setEditedText] = useState('');\n  /* Database */\n  const [jobName, setJobName] = useState('');\n  const [jobList, setJobList] = useState([]);\n\n  useEffect(() => {\n    fetchJobs();\n  }, []);\n\n  const fetchJobs = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/get-jobs');\n      const data = response.data;\n      console.log(\"fetchJobs(): data.jobs:\", data)\n      setJobList(data);\n    } catch (error) {\n       console.log('Error in fetchJobs():', error);\n    }\n  };\n\n  const saveJob = async () => {\n    const ownerID = 1; // Hardcode owner ID\n    const orgID = 1000;\n\n    const jobData = {\n      title: jobName,\n      desc: job_desc,\n      owner_id: ownerID,\n      org_id: orgID\n    };\n\n    try {\n      const response = await axios.post('http://localhost:5000/save-job', jobData);\n      console.log(response.data.message);\n      fetchJobs();\n    } catch (error) {\n      console.log('Error:', error);\n    }\n  };\n\n  /**\n   * Handle click event on a job item in the list.\n   * Retrieve the job description from the SQLite table based on the job's ID.\n   * Set the job description as the value of the \"Job Description\" TextField.\n   *   job - The job object clicked in the list.\n   */\n  const handleJobClickinList = async (job) => {\n    try {\n      // Make a GET request to the Flask API endpoint to retrieve job description\n      const response = await axios.get(`http://localhost:5000/get-job/${job.id}`);\n      const data = response.data;\n\n      if (data.desc) {\n        // Set the job description in the state to update the \"Job Description\" TextField\n        setJobDesc(data.desc);\n      }\n    } catch (error) {\n      console.log('Error in handleJobClickinList():', error);\n    }\n  };\n\n  \n\n  /**\n   * Handles the analyze button click event.\n   * Calls the OpenAI API with the provided 'job_desc' to extract keywords from the file 'resume_fname'\n   */\n  const handleAnalyze = () => {\n    axios.post('http://localhost:5000/analyze', { job_desc, resume_fname })\n      .then(response => {\n        setFoundKeywords(response.data.found_keywords_arr);\n        setMissingKeywords(response.data.missing_keywords_arr);\n      })\n      .catch(error => {\n        console.log('Analyze this request error:', error);\n      });\n  };\n\n  /**\n   * Handles the Generate Resume button click event.\n   * Calls the OpenAI API with the provided text to add missing keywords\n   */\n    const handleGenerate = () => {\n      axios.post('http://localhost:5000/generate', { resume_fname, missing_keywords_arr })\n        .then(response => {\n          setEditedText(response.data.edited_txt);\n        })\n        .catch(error => {\n          console.log('handleGenerate() error:', error);\n        });\n    };\n\n  // handleJobDescChange() \n  // Clear the keyword list whenever the input text changes\n  const handleJobDescChange = (event) => {\n    setJobDesc(event.target.value);\n    setEditedText('');\n    setFoundKeywords([]);\n    setMissingKeywords([]);\n  };\n\n  // handleFileSelect\n  const handleFileSelect = (event) => {\n    const file = event.target.files[0];\n    if (file) {\n      setResumeFname(file.name);\n    }\n  };\n\n  // handleFileOpen\n  const handleFileOpen = () => {\n    document.getElementById('file-input').click();\n  };\n\n  // This is the web application\n  return (\n    <div>\n      <Box sx={{ flexGrow: 1 }}>\n        <AppBar position=\"static\">\n          <Toolbar variant=\"dense\">\n            <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\" sx={{ mr: 2 }}>\n              <MenuIcon />\n            </IconButton>\n            <Typography variant=\"h6\" color=\"inherit\" component=\"div\">\n              ResumeAI\n            </Typography>\n          </Toolbar>\n        </AppBar>\n      </Box>\n      <br></br>\n      <Box sx={{ flexGrow: 1 }}>\n        <Grid container spacing={2}>\n          <Grid item xs={8}>\n          \n            {/* Open file input */}\n            <input type=\"file\" id=\"file-input\" onChange={handleFileSelect} style={{ display: 'none' }} />\n            <Button \n              variant=\"contained\" \n              size=\"large\" \n              sx={{ mb: 2, mr: 2 }} \n              onClick={handleFileOpen} \n              endIcon={<FileOpenIcon />}>{G_OPENRESUME_TXT}\n            </Button>\n\n            {/* Filename text field */}\n            <TextField label=\"Resume\" \n              className=\"resume-filename\" \n              variant=\"filled\" \n              size=\"small\" \n              sx={{ mb: 2 }} \n              focused value={resume_fname} \n              InputProps={{ readOnly: true }} />\n          \n            {/* job_desc–This is where you enter the job description */}\n            <TextField label=\"Job Description\" \n              className=\"input-pane\" \n              variant=\"filled\" \n              multiline rows={20} \n              sx={{ mb: 1 }} \n              defaultValue={job_desc} \n              onChange={handleJobDescChange} />\n          \n            {/* Name the job */}\n            <TextField label=\"Job Name\" \n              fullWidth \n              sx={{ mb: 2 }}\n              size=\"small\"\n              value={jobName}\n              onChange={(e) => setJobName(e.target.value)} />\n\n            <Button \n              variant=\"contained\" \n              endIcon={<SaveAsIcon />}\n              onClick={saveJob}>\n                {G_SAVEJOB_TXT}\n              </Button>\n          \n          </Grid>\n\n          {/* List of jobs from the database */}\n          <Grid item xs={4}>\n            <Box sx={{ display: 'flex', justifyContent: 'center', my: 4 }}>\n              <Paper sx={{ p: 2, width: 600 }}>\n                <Typography variant=\"h8\" component=\"h4\">{G_JOBSHEADER_TXT}</Typography>\n                <List sx={{ maxHeight: 800, overflow: 'auto' }}>\n                  {jobList.map((job) => (\n                    <ListItem key={job.id} disablePadding>\n                      <ListItemButton onClick={() => handleJobClickinList(job)}>\n                        <ListItemText primary={job.title} />\n                      </ListItemButton>\n                    </ListItem>\n                  ))}\n                </List>\n              </Paper>\n            </Box>\n          </Grid>\n\n          <Grid item xs={8}>\n            {/* The output pane is where we display all the keywords */}\n            <Button \n              variant=\"contained\" \n              endIcon={<EditNoteIcon />}\n              sx={{mb:5}} \n              onClick={handleAnalyze} >\n              {G_KEYBUTTON_TXT}\n            </Button>\n            \n            <div className=\"keywords-pane\">\n              <Box\n                sx={{\n                  display: 'flex',\n                  flexWrap: 'wrap',\n                  width: 500,\n                  height: 150\n                }}>\n                <Stack direction=\"row\"  flexWrap=\"wrap\" spacing={1}>\n                {found_keywords.map((keyword, index) => (\n                    <Chip label={keyword} color=\"success\" size=\"small\" icon={<CheckCircleIcon />} sx={{mb:1, mr:1, ml:1}} />\n                ))}\n                {missing_keywords_arr.map((keyword, index) => (\n                    <Chip label={keyword} color=\"error\" size=\"small\" icon={<ErrorIcon />} sx={{mb:1, mr:1, ml:1}} />\n                ))}\n              </Stack>\n              </Box>\n            </div>\n          </Grid>\n\n          <Grid item xs={8}>\n              {/* The pane where we generate a new resume */}\n              <Button variant=\"contained\" sx={{mt:5, mb:5}} onClick={handleGenerate} endIcon={<EditNoteIcon />}>{G_GENERATERESUME_TXT}</Button>\n              \n              {/* Generate field containing the new resume */}\n              <TextField className=\"output-pane\" label=\"Edited\" variant=\"filled\" multiline rows={20} value={edited_txt} />\n            \n          </Grid>\n        </Grid>\n      </Box>\n    </div>\n  );\n}\n\nexport default App;\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}